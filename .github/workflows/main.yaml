name: mainWorkflow
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  simpleJob:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # execute command on the runner
    - run: echo 'Hello GitHub Actions'
    - run: print('Hello Python!')
      shell: python

    # execute a shell script on the runner
    # NOTE You have to use `actions/checkout@v2` before.
    # NOTE Do not forget to add execute permission on the scripts.
    - run: ./.github/scripts/helloworld.sh

    # docker container action
    - uses: docker://alpine:latest

  # upload and download artifact
  artifactUploadJob:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo 'This is an artifact!' > ${{ runner.temp }}/artifact.txt
    - uses: actions/upload-artifact@v3
      with:
        name: example-artifact
        path: ${{ runner.temp }}/artifact.txt
  artifactDownloadJob:
    runs-on: ubuntu-latest
    needs: artifactUploadJob
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: example-artifact
    # the downloaded file is located in $GITHUB_WORKSPACE
    - run: cat artifact.txt

  # expressions
  expressionJob:
    # comparison
    runs-on: ubuntu-latest
    steps:
    - run: echo 'GitHub ignores case'
      if: ${{ 'String' == 'string' }}
    - run: echo 'GitHub casts data types to a number'
      if: ${{ 0 == false }}

  # contexts
  contextsJob:
    runs-on: ubuntu-latest
    steps:
    - run: echo 'You can access context information using these syntaxes'
      if: ${{ github['sha'] == github.sha }}

    # NOTE env.VALUE is string (not bool)
    - run: echo 'This step is NOT executed (0 != 1)'
      if: ${{ 'true' == fromJSON(env.VALUE) }}
      env:
        VALUE: true
    - run: echo 'This step is executed ("true" == "true")'
      if: ${{ 'true' == env.VALUE }}
      env:
        VALUE: true

  # environment variable
  environmentVariableJob:
    env:
      FOO: foo
    runs-on: ubuntu-latest
    steps:
    - run: env
    - run: echo $FOO
    - run: echo $FOO
      env:
        FOO: foooo
    - run: echo "BAR=bar" >> $GITHUB_ENV
    - run: echo $BAR

  # outputs
  outputDefineJob:
    runs-on: ubuntu-latest
    outputs:
      variable: ${{ steps.step1.outputs.variable }}
    steps:
    - id: step1
      run: echo "::set-output name=variable::foo"
  outputAccessJob:
    runs-on: ubuntu-latest
    needs: outputDefineJob
    steps:
    - run: echo ${{ needs.outputDefineJob.outputs.variable }}

  # workflow commands
  workflowCommandJob:
    runs-on: ubuntu-latest
    steps:
    - id: set
      run: echo '::set-output name=VALUE::foo'
    - run: echo ${{ steps.set.outputs.VALUE }}
    # Optionaly you can specify a position
    # https://github.com/dr666m1/test-github-actions/commit/c32aad6525f89d97ccfb8488816af74fd252982e#annotation_3074059734
    - run: echo "::notice::message"

  containerJob:
    container:
      image: debian:latest
    runs-on: ubuntu-latest
    steps:
    - run: cat /etc/debian_version
    # NOTE
    # You have to add git in your PATH before actions/checkout.
    # See https://github.com/actions/checkout/issues/175
    - run: |
        apt-get update
        apt-get install -y git
    - uses: actions/checkout@v2
    - run: cat ./README.md

  subWorkflowJob1:
    uses: ./.github/workflows/sub.yaml
    with:
      message: Hello from mainWorkflow!
  subWorkflowJob2:
    runs-on: ubuntu-latest
    needs: subWorkflowJob1
    steps:
    - run: echo ${{ needs.subWorkflowJob1.outputs.greet }}

# redisJob:
#   redis:
#     image: redis
#     ports:
#     - 6379/tcp
